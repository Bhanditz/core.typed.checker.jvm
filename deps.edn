{:paths ["src/main/clojure"]
 :deps {org.clojure/clojure {:mvn/version "1.9.0"}
        org.clojure/core.typed.runtime.jvm {:mvn/version "0.7.0"}
        org.clojure/core.typed.analyzer.jvm {:mvn/version "0.7.0"}
        org.typedclojure/core.typed.lang.jvm {:mvn/version "0.7.0"}
        org.clojure/tools.reader {:mvn/version "1.1.1"}
        org.clojure/core.cache {:mvn/version "0.6.5"}
        org.clojure/tools.namespace {:mvn/version "0.3.0-alpha4"}
        org.clojure/math.combinatorics {:mvn/version "0.1.4"
                                        :exclusions [org.clojure/clojure]}}
 :aliases {; eg. if this repo is in ~/Projects/core.typed.checker.jvm, clone in these directories:
           ; - ~/Projects/core.typed.runtime.jvm
           ; - ~/Projects/core.typed.analyzer.jvm
           :local-dev
           {:override-deps
            {org.clojure/core.typed.runtime.jvm {:local/root "../core.typed.runtime.jvm"
                                                 :deps/manifest :deps}
             org.clojure/core.typed.analyzer.jvm {:local/root "../core.typed.analyzer.jvm"
                                                  :deps/manifest :deps}
             org.typedclojure/core.typed.lang.jvm {:local/root "../core.typed.lang.jvm"
                                                   :deps/manifest :deps}}}
           :HEAD
           {:extra-deps
            {org.clojure/clojure {:mvn/version "1.10.0-beta5"}
             org.clojure/core.typed.runtime.jvm {:git/url "https://github.com/clojure/core.typed.runtime.jvm.git"
                                                 :sha "a2c8e17965ac96c4ae3e9c6483d5c1c7051783ef"
                                                 :deps/manifest :deps}
             org.clojure/core.typed.analyzer.jvm {:git/url "https://github.com/clojure/core.typed.analyzer.jvm.git"
                                                  :sha "f30e7431f643701f13317ab7b4bcbbde74a47c48"
                                                  :deps/manifest :deps}}}
           :nREPL
           {:extra-paths ["script"]
            :extra-deps
            {nrepl/nrepl {:mvn/version "0.4.5"}
             cider/piggieback {:mvn/version "0.3.8"}}
            :main-opts ["-m" "nrepl.cmdline"
                        "--interactive"]}

           :reply
           {:extra-deps
            {reply {:mvn/version "0.4.1"}}
            :main-opts ["-m" "reply.main"]}

           :start-repl
           {:extra-paths ["script"]
            :extra-deps
            {com.bhauman/rebel-readline {:mvn/version "0.1.4"}}
            :main-opts ["-m" "start-repl"]}

           :clj-latest {:override-deps {org.clojure/clojure {:mvn/version "1.10.0-RC2"}}}
           :test
           {:extra-paths ["src/test/clojure"
                          "src/test/resources"]
            :extra-deps {org.clojure/tools.nrepl {:mvn/version "0.2.6"
                                                  :exclusions [org.clojure/clojure]}
                         org.clojure/core.async {:mvn/version "0.3.465"
                                                 :exclusions [org.clojure/tools.analyzer.jvm]}}}
           :runner
           {:extra-deps {org.typedclojure/test-runner
                         {:git/url "https://github.com/typedclojure/test-runner"
                          :sha "2d7af465ac90b2d083753daf251bdb4a09ae97cd"}}
            :main-opts ["-m" "cognitect.test-runner"
                        "-d" "src/test/clojure/clojure/core/typed/test"
                        "-r" ".*"
                        ;"-w" "clojure.test.junit/with-junit-output"
                        ;"-o" "junit-output.xml"
                        ]}}}
